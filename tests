#! /bin/bash
# 
# This file is part of hbackup.
# Copyright (C) 2006, 2007 Richard Kettlewell
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
#
set -e

dotests() {
  local what=$1

  echo
  echo "testing $what"

  rm -rf ,test
  mkdir ,test
  repo=`pwd`/,test/repo
  mkdir ,test/tree

  cp ${srcdir}/*.cc ,test/tree
  mkdir ,test/tree/d1
  cp ${srcdir}/*.cc ${srcdir}/*.h ,test/tree/d1

  echo A simple backup-verify-restore test
  echo backup
  ${what} --repo ${repo} --index `pwd`/,test/h1 --root ,test/tree --backup
  echo verify
  ${what} --repo ${repo} --index `pwd`/,test/h1 --verify 
  mkdir ,test/r1
  echo restore
  ${what} --repo ${repo} --index `pwd`/,test/h1 --root ,test/r1 --restore
  diff -ruN ,test/tree ,test/r1

  echo backup again now hints are established
  sleep 1			# give clock a chance to change
  touch ,test/tree/*.cc		# throw some timestamps off
  ${what} --repo ${repo} --index `pwd`/,test/h3 --root ,test/tree --backup
  echo verify hinted version
  ${what} --repo ${repo} --index `pwd`/,test/h3 --verify 
  mkdir ,test/r3
  echo restore hinted version
  ${what} --repo ${repo} --index `pwd`/,test/h3 --root ,test/r3 --restore
  diff -ruN ,test/tree ,test/r3

  echo Delete some files and check that backup + restore works
  rm -f ,test/tree/*.cc
  echo backup
  ${what} --repo ${repo} --index `pwd`/,test/h2 --root ,test/tree --backup
  mkdir ,test/r2
  echo restore
  ${what} --repo ${repo} --index `pwd`/,test/h2 --root ,test/r2 --restore
  diff -ruN ,test/tree ,test/r2

  echo Clean up obsolete files
  echo cleanup
  echo Obsolete: ----
  ${what} --repo ${repo} --cleanup --verbose `pwd`/,test/h2
  echo --------------

  rm -rf ,test/r1
  rm -rf ,test/r2
  rm -rf ,test/r3

  echo The restore should still work because only duplicated files deleted
  mkdir ,test/r1
  echo restore
  ${what} --repo ${repo} --index `pwd`/,test/h1 --root ,test/r1 --restore
  # can't diff as tree is changed

  echo Should be able to restore r2 also
  mkdir ,test/r2
  echo restore
  ${what} --repo ${repo} --index `pwd`/,test/h2 --root ,test/r2 --restore
  diff -ruN ,test/tree ,test/r2

  rm -f ,test/tree/d1/*.h
  echo backup
  ${what} --repo ${repo} --index `pwd`/,test/h1 --overwrite --root ,test/tree --backup
  echo Obsolete: ----
  ${what} --repo ${repo} --cleanup --verbose `pwd`/,test/h1
  echo --------------
  
  echo cleanup
  ${what} --repo ${repo} --cleanup --verbose `pwd`/,test/h1 | xargs rm

  rm -rf ,test/r1
  mkdir ,test/r1
  echo restore
  ${what} --repo ${repo} --index `pwd`/,test/h1 --root ,test/r1 --restore
  diff -ruN ,test/tree ,test/r1

  echo cleanup with bogus names
  touch ${repo}/sha1/rubbish		# case 
  mkdir -p ${repo}/sha1/00/00
  touch ${repo}/sha1/00/00/0123456789       # wrong size
  ${what} --repo ${repo} --cleanup --verbose `pwd`/,test/h1

}

treetest() {
  echo Create a complex tree and restore with both hbackup and nhbackup
  echo populate
  rm -rf ,test
  mkdir -p ,test/tree
  mkdir ,test/tree/d1 ,test/tree/d2 ,test/tree/d2/a ,test/tree/d2/b
  cp ${srcdir}/*.cc ,test/tree/d1/.
  cp ${srcdir}/*.h ,test/tree/d2/.
  cp ${srcdir}/Makefile* ,test/tree/d2/a/.
  cp ${srcdir}/*.c ,test/tree/d2/b/.
  repo=`pwd`/,test/repo
  echo backup with nhbackup
  nhbackup --repo ${repo} --index `pwd`/,test/h1 --root ,test/tree --backup
  for what in nhbackup hbackup; do
    echo verify with ${what}
    ${what} --repo ${repo} --index `pwd`/,test/h1 --verify 
    echo restore with ${what}
    rm -rf ,test/r${what}
    mkdir ,test/r${what}
    ${what} --repo ${repo} --index `pwd`/,test/h1 --root ,test/r${what} --restore
    echo check output against original
    diff -ruN ,test/tree ,test/r${what}
  done
  echo compare output from both tools
  diff -ruN ,test/rhbackup ,test/rnhbackup
}
 

# TODO:
#   - test error behaviour
#   - test unique features of each script
#   - ...

for sftpserver in /usr/libexec/sftp-server \
                  /usr/local/libexec/sftp-server \
                  /usr/lib/openssh/sftp-server \
                  /usr/local/lib/openssh/sftp-server \
                  /usr/lib/sftp-server \
                  /usr/local/lib/sftp-server \
                  none; do
  if [ -e $sftpserver ]; then
    break
  fi
done
if [ $sftpserver = none ]; then
  echo >&2 CANNOT FIND AN SFTP SERVER
  exit 1
fi
echo "Found SFTP server: $sftpserver"

dotests hbackup
dotests nhbackup
dotests "nhbackup --sftp <magic> --sftp-server $sftpserver"
dotests "nhbackup --no-recheck-hash"
dotests "nhbackup --verbose --hint-file ,test/hints"
treetest

echo
echo OK
echo
